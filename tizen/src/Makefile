EMUL_DIR=../emulator
DIBS_X86_DIR=../x86
DIBS_ARM_DIR=../arm
DIBS_COMMON_DIR=../common

ifneq ($(wildcard ../../config-host.mak),)
include ../../config-host.mak
else
config-host.mak:
	@echo "Please call configure before running make!"
	@exit 1
endif

export CONFIG_OPENGLES

ifdef CONFIG_OPENGLES
ifdef CONFIG_WIN32
GLESLIBS_LIST:=$(wildcard ../../arm-softmmu/*.dll)
else
GLESLIBS_LIST:=$(wildcard ../../arm-softmmu/lib*)
endif
endif

all: qemu skin_client
qemu: build_info ffmpeg_install check_hax
	cd ../../ && $(MAKE)
qemu_clean:
	cd ../../ && $(MAKE) clean
qemu_distclean:
	cd ../../ && $(MAKE) distclean

check_hax:
	@echo "build check hax"	
ifdef CONFIG_WIN32
	$(CC) -o check-hax.exe check_hax.c	
endif
ifdef CONFIG_DARWIN
	$(CC) -mmacosx-version-min=10.4 -o check-hax check_hax.c	
endif

skin_client:
	ant -buildfile skin/client/build.xml make-jar

build_info:
	@echo "/* Automatically generated by Makefile - do not modify! */" > build_info.h
	@echo "const char build_version[] = \"`cat VERSION`\";" >> build_info.h
	@echo "const char build_date[] = \"`date +"%F %T %Z"`\";" >> build_info.h
	@echo "const char pkginfo_version[] = \"`sed -n '1p' ./../../package/pkginfo.manifest`\";" >> build_info.h
	@echo "const char pkginfo_maintainer[] = \"`sed -n '2p' ./../../package/pkginfo.manifest`\";" >> build_info.h
	@echo "const char pkginfo_githead[] = \"`git rev-parse HEAD`\";" >> build_info.h

ffmpeg:
	cd ../distrib/libav/ && $(MAKE)
ffmpeg_install: ffmpeg
	cd ../distrib/libav/ && $(MAKE) install
ffmpeg_clean:
	cd ../distrib/libav/ && $(MAKE) clean
ffmpeg_distclean:
	cd ../distrib/libav/ && $(MAKE) clean && rm -rf ${ARCH}

clean: ffmpeg_clean qemu_clean
ifdef CONFIG_WIN32
	rm -f check-hax.exe
endif
ifdef CONFIG_DARWIN
	rm -f check-hax
endif
distclean: ffmpeg_distclean qemu_distclean

install: all
	mkdir -p $(EMUL_DIR)/bin
	mkdir -p $(EMUL_DIR)/etc
	mkdir -p $(EMUL_DIR)/data
ifndef CONFIG_DARWIN
	@for target in $(TARGET_DIRS); do \
	case "$$target" in \
	i386-softmmu) \
		mkdir -p $(EMUL_DIR)/data/bios ;\
		echo "Copying i386-softmmu/qemu-system-i386 to $(EMUL_DIR)/bin/emulator-x86" ;\
		cp ../../i386-softmmu/qemu-system-i386 $(EMUL_DIR)/bin/emulator-x86 ;\
		echo "Copying bioses to $(EMUL_DIR)/data/bios" ;\
		cp -dpr ../../pc-bios/bios.bin $(EMUL_DIR)/data/bios ;\
		cp -dpr ../../pc-bios/linuxboot.bin $(EMUL_DIR)/data/bios ;\
		cp -dpr ../../pc-bios/pxe-virtio.rom $(EMUL_DIR)/data/bios ;\
		;; \
	arm-softmmu) \
		echo "Copying arm-softmmu/qemu-system-arm to $(EMUL_DIR)/bin/emulator-arm" ;\
		cp ../../arm-softmmu/qemu-system-arm $(EMUL_DIR)/bin/emulator-arm ;\
		if [ ! -z "$$CONFIG_OPENGLES" ] ; then \
		echo "Copying OpenGLES libraries to $(EMUL_DIR)/bin/" ;\
		cp -dp -t $(EMUL_DIR)/bin/ $(GLESLIBS_LIST) ;\
		fi ;\
		;; \
	esac; \
	done
else
	@for target in $(TARGET_DIRS); do \
	case "$$target" in \
	i386-softmmu) \
		mkdir -p $(EMUL_DIR)/data/bios ;\
		echo "Copying i386-softmmu/qemu-system-i386 to $(EMUL_DIR)/bin/emulator-x86" ;\
		cp ../../i386-softmmu/qemu-system-i386 $(EMUL_DIR)/bin/emulator-x86 ;\
		echo "Copying bioses to $(EMUL_DIR)/data/bios" ;\
		cp -pPR ../../pc-bios/bios.bin $(EMUL_DIR)/data/bios ;\
		cp -pPR ../../pc-bios/linuxboot.bin $(EMUL_DIR)/data/bios ;\
		cp -pPR ../../pc-bios/pxe-virtio.rom $(EMUL_DIR)/data/bios ;\
		;; \
	arm-softmmu) \
		echo "Copying arm-softmmu/qemu-system-arm to $(EMUL_DIR)/bin/emulator-arm" ;\
		cp ../../arm-softmmu/qemu-system-arm $(EMUL_DIR)/bin/emulator-arm ;\
		if [ ! -z "$$CONFIG_OPENGLES" ] ; then \
		echo "Copying OpenGLES libraries to $(EMUL_DIR)/bin/" ;\
		cp -pP -t $(EMUL_DIR)/bin/ $(GLESLIBS_LIST) ;\
		fi ;\
		;; \
	esac; \
	done
endif
	
	cp skin/client/emulator-skin.jar $(EMUL_DIR)/bin
ifdef CONFIG_WIN32
	cp ../../i386-softmmu/check-gl.exe $(EMUL_DIR)/bin
	cp check-hax.exe $(EMUL_DIR)/bin
endif
ifdef CONFIG_DARWIN
	cp ../../i386-softmmu/check-gl $(EMUL_DIR)/bin
	cp check-hax $(EMUL_DIR)/bin
	cp sdbscript $(EMUL_DIR)/bin
endif
ifdef CONFIG_LINUX
	cp ../../i386-softmmu/check-gl $(EMUL_DIR)/bin
	cp -pPr ../distrib/initscript/tizen-kvm $(EMUL_DIR)/etc
	cp -pPr ../distrib/initscript/45-tizen-kvm.rules $(EMUL_DIR)/etc
endif

ifndef CONFIG_DARWIN
	cp ../../qemu-img $(EMUL_DIR)/bin
	cp skin/client/lib/swt.jar $(EMUL_DIR)/bin/swt.jar
	cp -dpr skin/client/skins $(EMUL_DIR)
else
	cp ../../qemu-img $(EMUL_DIR)/bin
	cp skin/client/lib/swt.jar $(EMUL_DIR)/bin/swt.jar
	cp -pPR skin/client/skins $(EMUL_DIR)
	cp -pPR skin/client/native_src/libshared.dylib $(EMUL_DIR)/bin
endif

ifdef CONFIG_DARWIN
	install_name_tool -change /opt/local/lib/libgthread-2.0.*.dylib @loader_path/libgthread-2.0.0.dylib $(EMUL_DIR)/bin/qemu-img
	install_name_tool -change /opt/local/lib/libglib-2.0.*.dylib @loader_path/libglib-2.0.0.dylib $(EMUL_DIR)/bin/qemu-img
	install_name_tool -change /opt/local/lib/libintl.8.dylib @loader_path/libintl.8.dylib $(EMUL_DIR)/bin/qemu-img
	install_name_tool -change /opt/local/lib/gcc47/libgcc_s.1.dylib @loader_path/libgcc_s.1.dylib $(EMUL_DIR)/bin/qemu-img
	install_name_tool -change /opt/local/lib/libz.1.dylib @loader_path/libz.1.dylib $(EMUL_DIR)/bin/qemu-img
	install_name_tool -change /opt/local/lib/libcurl.4.dylib @loader_path/libcurl.4.dylib $(EMUL_DIR)/bin/qemu-img
	install_name_tool -change /opt/local/lib/libglib-2.0.*.dylib @loader_path/libglib-2.0.0.dylib $(EMUL_DIR)/bin/check-gl
	install_name_tool -change /opt/local/lib/libintl.8.dylib @loader_path/libintl.8.dylib $(EMUL_DIR)/bin/check-gl
	install_name_tool -change /opt/local/lib/gcc47/libgcc_s.1.dylib @loader_path/libgcc_s.1.dylib $(EMUL_DIR)/bin/check-gl

	@for target in $(TARGET_DIRS); do \
	case "$$target" in \
	i386-softmmu) \
		install_name_tool -change /opt/local/lib/libgthread-2.0.*.dylib @loader_path/libgthread-2.0.0.dylib $(EMUL_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/libglib-2.0.*.dylib @loader_path/libglib-2.0.0.dylib $(EMUL_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/libintl.8.dylib @loader_path/libintl.8.dylib $(EMUL_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/gcc47/libgcc_s.1.dylib @loader_path/libgcc_s.1.dylib $(EMUL_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/libz.1.dylib @loader_path/libz.1.dylib $(EMUL_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/libncurses.5.dylib @loader_path/libncurses.5.dylib $(EMUL_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/libcurl.4.dylib @loader_path/libcurl.4.dylib $(EMUL_DIR)/bin/emulator-x86 ;\
		;; \
	arm-softmmu) \
		;; \
	esac; \
	done
endif



# for dibs system...
all_dibs: qemu skin_client_dibs
skin_client_dibs:
	ant -buildfile skin/client/build.xml -Dclasspath.dibs=$(ROOTDIR)/tools/emulator/bin make-jar-dibs
install_dibs: all_dibs
	mkdir -p $(DIBS_COMMON_DIR)/bin
	mkdir -p $(DIBS_COMMON_DIR)/etc
	mkdir -p $(DIBS_X86_DIR)/bin
	mkdir -p $(DIBS_X86_DIR)/data
	mkdir -p $(DIBS_X86_DIR)/etc
	mkdir -p $(DIBS_ARM_DIR)/bin
ifndef CONFIG_DARWIN
	@for target in $(TARGET_DIRS); do \
	case "$$target" in \
	i386-softmmu) \
		mkdir -p $(DIBS_X86_DIR)/data/bios ;\
		echo "Copying i386-softmmu/qemu-system-i386 to $(DIBS_X86__DIR)/bin/emulator-x86" ;\
		cp ../../i386-softmmu/qemu-system-i386 $(DIBS_X86_DIR)/bin/emulator-x86 ;\
		echo "Copying bioses to $(DIBS_X86_DIR)/data/bios" ;\
		cp -dpr ../../pc-bios/bios.bin $(DIBS_X86_DIR)/data/bios ;\
		cp -dpr ../../pc-bios/linuxboot.bin $(DIBS_X86_DIR)/data/bios ;\
		cp -dpr ../../pc-bios/pxe-virtio.rom $(DIBS_X86_DIR)/data/bios ;\
		;; \
	arm-softmmu) \
		echo "Copying arm-softmmu/qemu-system-arm to $(DIBS_ARM_DIR)/bin/emulator-arm" ;\
		cp ../../arm-softmmu/qemu-system-arm $(DIBS_ARM_DIR)/bin/emulator-arm ;\
		if [ ! -z "$$CONFIG_OPENGLES" ] ; then \
		echo "Copying OpenGLES libraries to $(DIBS_ARM_DIR)/bin/" ;\
		cp -dp -t $(DIBS_ARM_DIR)/bin/ $(GLESLIBS_LIST) ;\
		fi ;\
		;; \
	esac; \
	done
else
	@for target in $(TARGET_DIRS); do \
	case "$$target" in \
	i386-softmmu) \
		mkdir -p $(DIBS_X86_DIR)/data/bios ;\
		echo "Copying i386-softmmu/qemu-system-i386 to $(DIBS_X86_DIR)/bin/emulator-x86" ;\
		cp ../../i386-softmmu/qemu-system-i386 $(DIBS_X86_DIR)/bin/emulator-x86 ;\
		echo "Copying bioses to $(DIBS_X86_DIR)/data/bios" ;\
		cp -pPR ../../pc-bios/bios.bin $(DIBS_X86_DIR)/data/bios ;\
		cp -pPR ../../pc-bios/linuxboot.bin $(DIBS_X86_DIR)/data/bios ;\
		cp -pPR ../../pc-bios/pxe-virtio.rom $(DIBS_X86_DIR)/data/bios ;\
		;; \
	arm-softmmu) \
		echo "Copying arm-softmmu/qemu-system-arm to $(DIBS_ARM_DIR)/bin/emulator-arm" ;\
		cp ../../arm-softmmu/qemu-system-arm $(DIBS_ARM_DIR)/bin/emulator-arm ;\
		if [ ! -z "$$CONFIG_OPENGLES" ] ; then \
		echo "Copying OpenGLES libraries to $(DIBS_ARM_DIR)/bin/" ;\
		cp -pP -t $(DIBS_ARM_DIR)/bin/ $(GLESLIBS_LIST) ;\
		fi ;\
		;; \
	esac; \
	done
endif

	cp skin/client/emulator-skin.jar $(DIBS_COMMON_DIR)/bin
ifdef CONFIG_WIN32
	cp ../../i386-softmmu/check-gl.exe $(DIBS_COMMON_DIR)/bin
	cp check-hax.exe $(DIBS_COMMON_DIR)/bin
endif

ifdef CONFIG_DARWIN
	cp ../../i386-softmmu/check-gl $(DIBS_COMMON_DIR)/bin
	cp check-hax $(DIBS_COMMON_DIR)/bin
	cp sdbscript $(DIBS_COMMON_DIR)/bin
endif
ifdef CONFIG_LINUX
	cp ../../i386-softmmu/check-gl $(DIBS_COMMON_DIR)/bin
	echo "Copying tizen-kvm to $(DIBS_X86_DIR)/etc"
	cp -pPr ../distrib/initscript/tizen-kvm $(DIBS_X86_DIR)/etc
	cp -pPr ../distrib/initscript/45-tizen-kvm.rules $(DIBS_X86_DIR)/etc
endif

ifndef CONFIG_DARWIN
	cp ../../qemu-img $(DIBS_COMMON_DIR)/bin
	cp -dpr skin/client/skins $(DIBS_COMMON_DIR)
else
	cp ../../qemu-img $(DIBS_COMMON_DIR)/bin
	cp -pPR skin/client/skins $(DIBS_COMMON_DIR)
	cp -pPR skin/client/native_src/libshared.dylib $(DIBS_COMMON_DIR)/bin
endif

ifdef CONFIG_DARWIN
	install_name_tool -change /opt/local/lib/libgthread-2.0.*.dylib @loader_path/libgthread-2.0.0.dylib $(DIBS_COMMON_DIR)/bin/qemu-img 
	install_name_tool -change /opt/local/lib/libglib-2.0.*.dylib @loader_path/libglib-2.0.0.dylib $(DIBS_COMMON_DIR)/bin/qemu-img
	install_name_tool -change /opt/local/lib/libintl.8.dylib @loader_path/libintl.8.dylib $(DIBS_COMMON_DIR)/bin/qemu-img
	install_name_tool -change /opt/local/lib/gcc47/libgcc_s.1.dylib @loader_path/libgcc_s.1.dylib $(DIBS_COMMON_DIR)/bin/qemu-img
	install_name_tool -change /opt/local/lib/libz.1.dylib @loader_path/libz.1.dylib $(DIBS_COMMON_DIR)/bin/qemu-img
	install_name_tool -change /opt/local/lib/libcurl.4.dylib @loader_path/libcurl.4.dylib $(DIBS_COMMON_DIR)/bin/qemu-img
	install_name_tool -change /opt/local/lib/libglib-2.0.*.dylib @loader_path/libglib-2.0.0.dylib $(DIBS_COMMON_DIR)/bin/check-gl
	install_name_tool -change /opt/local/lib/libintl.8.dylib @loader_path/libintl.8.dylib $(DIBS_COMMON_DIR)/bin/check-gl
	install_name_tool -change /opt/local/lib/gcc47/libgcc_s.1.dylib @loader_path/libgcc_s.1.dylib $(DIBS_COMMON_DIR)/bin/check-gl

	@for target in $(TARGET_DIRS); do \
	case "$$target" in \
	i386-softmmu) \
		install_name_tool -change /opt/local/lib/libgthread-2.0.*.dylib @loader_path/libgthread-2.0.0.dylib $(DIBS_X86_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/libglib-2.0.*.dylib @loader_path/libglib-2.0.0.dylib $(DIBS_X86_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/libintl.8.dylib @loader_path/libintl.8.dylib $(DIBS_X86_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/gcc47/libgcc_s.1.dylib @loader_path/libgcc_s.1.dylib $(DIBS_X86_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/libz.1.dylib @loader_path/libz.1.dylib $(DIBS_X86_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/libncurses.5.dylib @loader_path/libncurses.5.dylib $(DIBS_X86_DIR)/bin/emulator-x86 ;\
		install_name_tool -change /opt/local/lib/libcurl.4.dylib @loader_path/libcurl.4.dylib $(DIBS_X86_DIR)/bin/emulator-x86 ;\
		;; \
	arm-softmmu) \
		;; \
	esac; \
	done
endif
