/**
 *
 *
 * Copyright ( C ) 2011 - 2012 Samsung Electronics Co., Ltd. All rights reserved.
 *
 * Contact:
 * GiWoong Kim <giwoong.kim@samsung.com>
 * YeongKyoon Lee <yeongkyoon.lee@samsung.com>
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or ( at your option ) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
 *
 * Contributors:
 * - S-Core Co., Ltd
 *
 */

//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.5 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2012.10.22 at 04:10:02 PM KST 
//


package org.tizen.emulator.skin.dbi;

import javax.xml.bind.annotation.XmlRegistry;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.tizen.emulator.skin.dbi package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {


    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.tizen.emulator.skin.dbi
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link EmulatorUI }
     * 
     */
    public EmulatorUI createEmulatorUI() {
        return new EmulatorUI();
    }

    /**
     * Create an instance of {@link RotationsType }
     * 
     */
    public RotationsType createRotationsType() {
        return new RotationsType();
    }

    /**
     * Create an instance of {@link ColorsType }
     * 
     */
    public ColorsType createColorsType() {
        return new ColorsType();
    }

    /**
     * Create an instance of {@link EventInfoType }
     * 
     */
    public EventInfoType createEventInfoType() {
        return new EventInfoType();
    }

    /**
     * Create an instance of {@link RgbType }
     * 
     */
    public RgbType createRgbType() {
        return new RgbType();
    }

    /**
     * Create an instance of {@link RotationType }
     * 
     */
    public RotationType createRotationType() {
        return new RotationType();
    }

    /**
     * Create an instance of {@link KeyMapListType }
     * 
     */
    public KeyMapListType createKeyMapListType() {
        return new KeyMapListType();
    }

    /**
     * Create an instance of {@link LcdType }
     * 
     */
    public LcdType createLcdType() {
        return new LcdType();
    }

    /**
     * Create an instance of {@link RegionType }
     * 
     */
    public RegionType createRegionType() {
        return new RegionType();
    }

    /**
     * Create an instance of {@link KeyMapType }
     * 
     */
    public KeyMapType createKeyMapType() {
        return new KeyMapType();
    }

    /**
     * Create an instance of {@link ImageListType }
     * 
     */
    public ImageListType createImageListType() {
        return new ImageListType();
    }

}
